{"ast":null,"code":"var _jsxFileName = \"/home/gustavo_muniz/Henry/rick_and_morty/Client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Cards from './components/Cards/Cards.jsx';\nimport Nav from './components/Nav/Nav.jsx';\nimport About from './components/About/About.jsx';\nimport Detail from './components/Detail/Detail.jsx';\nimport Form from './components/Form/Form.jsx';\nimport Favorites from './components/Favorites/Favorites.jsx';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\n\n/* const URL_BASE = 'https://be-a-rym.up.railway.app/api/character';\nconst API_KEY = 'f99ef8399d40.cea0bfba7c15f21eb580'; */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst email = 'Gustavo@gmail.com';\nconst password = '123456';\nfunction App() {\n  _s();\n  const location = useLocation(); //Retorna la locación del objeto. la cual representa la url\n  const navigate = useNavigate(); // Cambia la locación de la url \n  const [characters, setCharacters] = useState([]); //characters es un estado del tipo array de objetos\n  const [access, setAcces] = useState(false); //access es un estado inicializado en false\n\n  const login = userData => {\n    const {\n      email,\n      password\n    } = userData; // Hace destructuring del objeto userData, extayendo las propiedades email y password\n    const URL = 'http://localhost:3001/rickandmorty/login/';\n    axios(URL + `?email=${email}&password=${password}`) //realiza una petición GET a la URL pasando como parametros email y password\n    //Si la solicitud es exitosa regresa el objeto data que es: {access:true} con un valor booleano true o false.\n    .then(_ref => {\n      let {\n        data\n      } = _ref;\n      const {\n        access\n      } = data; //Hace destructuring de data, extrayendo el valor booleano (true o false)\n      setAccess(access); // Configura el estado access con el valor booleano (true o false)\n      access && navigate('/home'); //Si access es true, entonces ingreso al home\n    });\n  };\n\n  useEffect(() => {\n    // cada vez que cambie access se ejecuta lo que este en useEffect\n    !access && navigate('/'); // si access esta en false entonces no va a llevar a otra ruta que no sea /\n  }, [access]); // El array de dependencias se queda \"escuchando\" a access\n\n  // La función onSearch agrega un nuevo personaje al estado local characters\n  const onSearch = id => {\n    //Con axios le hago peticiones a una api al servidor, el id lo estamos obteniendo del input, \n    //es decir de lo que escribe el usuario. \n\n    axios(`https://rickandmortyapi.com/api/character/${id}`)\n    //Una vez que se ejecuta la petición, obtengo la respuesta con .then\n    //Axios retorna un objeto con una propiedad llamada data y ahi dentro es donde tengo la información de la api\n    .then(response => response.data) //de la respuesta que me retorna me quedo con data\n    .then(data => {\n      if (data.name) {\n        // si hay un data.name entonces \n        //setea characters [Crea una copia de todo lo que tenia characters(...oldChars), concatena la nueva respuesta (data)]\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert('¡No hay personajes con este ID!');\n      }\n    });\n  };\n  const onClose = id => {\n    //El método filter retornará los elementos del array que cumplan la condición especificada en la función callback\n    // Es decir me retornará un array con los characters que no contangan el id que le pase por parámetro.\n    const charactersFiltered = characters.filter(character => character.id !== id); // si da true se queda si da false se va el character\n    setCharacters(charactersFiltered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\n    //pathname me dice la url del usuario, si esta es diferente de '/' entonces randeriza a Nav\n    location.pathname !== '/' && /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login,\n          setAcces: setAcces\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"9hu6Zdp+y+dyS7PqkOkPhlZHreA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cards","Nav","About","Detail","Form","Favorites","useState","useEffect","axios","Routes","Route","useLocation","useNavigate","jsxDEV","_jsxDEV","email","password","App","_s","location","navigate","characters","setCharacters","access","setAcces","login","userData","URL","then","_ref","data","setAccess","onSearch","id","response","name","oldChars","window","alert","onClose","charactersFiltered","filter","character","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/gustavo_muniz/Henry/rick_and_morty/Client/src/App.js"],"sourcesContent":["import './App.css';\nimport Cards from './components/Cards/Cards.jsx';\nimport Nav from './components/Nav/Nav.jsx';\nimport About from './components/About/About.jsx';\nimport Detail from './components/Detail/Detail.jsx';\nimport Form from './components/Form/Form.jsx';\nimport Favorites from './components/Favorites/Favorites.jsx';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\n\n/* const URL_BASE = 'https://be-a-rym.up.railway.app/api/character';\nconst API_KEY = 'f99ef8399d40.cea0bfba7c15f21eb580'; */\n\nconst email = 'Gustavo@gmail.com'\nconst password = '123456'\n\nfunction App() {\n   const location = useLocation(); //Retorna la locación del objeto. la cual representa la url\n   const navigate = useNavigate() // Cambia la locación de la url \n   const [characters, setCharacters] = useState([]); //characters es un estado del tipo array de objetos\n   const [access, setAcces] = useState(false); //access es un estado inicializado en false\n\n   const login = (userData) => {\n      const { email, password } = userData; // Hace destructuring del objeto userData, extayendo las propiedades email y password\n      const URL = 'http://localhost:3001/rickandmorty/login/';\n      axios(URL + `?email=${email}&password=${password}`) //realiza una petición GET a la URL pasando como parametros email y password\n      //Si la solicitud es exitosa regresa el objeto data que es: {access:true} con un valor booleano true o false.\n      .then(({ data }) => {\n         const { access } = data; //Hace destructuring de data, extrayendo el valor booleano (true o false)\n         setAccess(access); // Configura el estado access con el valor booleano (true o false)\n         access && navigate('/home'); //Si access es true, entonces ingreso al home\n      });\n   }\n\n   useEffect(() => { // cada vez que cambie access se ejecuta lo que este en useEffect\n      !access && navigate('/') // si access esta en false entonces no va a llevar a otra ruta que no sea /\n   }, [access]) // El array de dependencias se queda \"escuchando\" a access\n\n   // La función onSearch agrega un nuevo personaje al estado local characters\n   const onSearch = (id) => {\n      //Con axios le hago peticiones a una api al servidor, el id lo estamos obteniendo del input, \n      //es decir de lo que escribe el usuario. \n\n      axios(`https://rickandmortyapi.com/api/character/${id}`) \n      //Una vez que se ejecuta la petición, obtengo la respuesta con .then\n      //Axios retorna un objeto con una propiedad llamada data y ahi dentro es donde tengo la información de la api\n\n      .then(response => response.data)  //de la respuesta que me retorna me quedo con data\n      .then((data) => { \n         if (data.name) { // si hay un data.name entonces \n            //setea characters [Crea una copia de todo lo que tenia characters(...oldChars), concatena la nueva respuesta (data)]\n            setCharacters((oldChars) => [...oldChars, data]); \n         } else {\n            window.alert('¡No hay personajes con este ID!');\n         }\n      });\n   }\n\n   const onClose = (id) => {\n      //El método filter retornará los elementos del array que cumplan la condición especificada en la función callback\n      // Es decir me retornará un array con los characters que no contangan el id que le pase por parámetro.\n      const charactersFiltered = characters.filter(character => character.id !== id)// si da true se queda si da false se va el character\n      setCharacters(charactersFiltered)\n   }\n\n   return (\n      <div className='App'>\n         {\n            //pathname me dice la url del usuario, si esta es diferente de '/' entonces randeriza a Nav\n            location.pathname !== '/' && <Nav onSearch={onSearch} />   \n         }\n          {/* le pasamos por propiedad a Nav la función onSearch */}\n\n         {/* Con Route definimos las rutas y que se ve a mostrar en cada una de ellas, después con Link le mostramos a que path se va a dirigir */}\n         <Routes>\n            <Route path='/' element={<Form login={login}  setAcces={setAcces}/>}/>\n            <Route path='/home' element={ <Cards characters={characters} onClose={onClose}/> }/>\n            <Route path='/about' element={<About/>} />\n            <Route path='/detail/:id' element={<Detail/>} />\n            <Route path='/favorites' element={<Favorites/>} />\n         </Routes>\n        \n      </div>\n   );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}