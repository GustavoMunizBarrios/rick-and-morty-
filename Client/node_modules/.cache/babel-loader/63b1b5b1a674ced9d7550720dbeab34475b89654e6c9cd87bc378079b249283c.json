{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from './action-types';\nimport axios from 'axios';\n\n//Esta función recibe un personaje por parámetro. Retorna un payload que es igual al personaje\nexport const addFav = character => {\n  const endpoint = 'http://localhost:3001/rickandmorty/fav'; //guarda la URL de nuestro servidor\n  return async dispatch => {\n    //retorna una función haciendo una petición al servidor\n    try {\n      const {\n        data\n      } = await axios.post(endpoint, character); // (ruta, el objeto character) character lo recibe por body nuestro servidor.\n\n      if (!data.length) throw Error('No se pudo agregar a favoritos'); //(data es un array con los personajes) Si data esta vacio tira error\n\n      return dispatch({\n        type: ADD_FAV,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\n\n//Esta función recibe un id por parámetro. Retorna un payload que es igual al id\nexport const removeFav = id => {\n  const endpoint = `http://localhost:3001/rickandmorty/fav/${id}`;\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.delete(endpoint);\n\n      //if(!data.length) throw Error('No hay favoritos') //(data es un array con los personajes) Si data esta vacio tira error\n\n      return dispatch({\n        type: REMOVE_FAV,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nexport const orderCards = order => {\n  return {\n    type: ORDER,\n    payload: order\n  };\n};","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","axios","addFav","character","endpoint","dispatch","data","post","length","Error","type","payload","error","console","log","message","removeFav","id","delete","filterCards","gender","orderCards","order"],"sources":["/home/gustavo_muniz/Henry/rick_and_morty/Client/src/redux/actions.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from './action-types';\r\nimport axios from 'axios';\r\n\r\n//Esta función recibe un personaje por parámetro. Retorna un payload que es igual al personaje\r\nexport const addFav = (character) => {\r\n    const endpoint = 'http://localhost:3001/rickandmorty/fav'; //guarda la URL de nuestro servidor\r\n    return async (dispatch) => { //retorna una función haciendo una petición al servidor\r\n      try {\r\n         const {data} = await axios.post(endpoint, character) // (ruta, el objeto character) character lo recibe por body nuestro servidor.\r\n\r\n         if(!data.length) throw Error('No se pudo agregar a favoritos') //(data es un array con los personajes) Si data esta vacio tira error\r\n\r\n         return dispatch({\r\n            type: ADD_FAV,\r\n            payload: data,\r\n        });\r\n      } catch (error) {\r\n         console.log(error.message);\r\n      }\r\n       \r\n    };\r\n };\r\n\r\n//Esta función recibe un id por parámetro. Retorna un payload que es igual al id\r\nexport const removeFav = (id) => {\r\n    const endpoint = `http://localhost:3001/rickandmorty/fav/${id}`;\r\n    return async (dispatch) => {\r\n      try {\r\n         const {data} = await axios.delete(endpoint);\r\n\r\n         //if(!data.length) throw Error('No hay favoritos') //(data es un array con los personajes) Si data esta vacio tira error\r\n\r\n         return dispatch({\r\n            type: REMOVE_FAV,\r\n            payload: data,\r\n         });\r\n      } catch (error) {\r\n         console.log(error.message);\r\n      }\r\n      \r\n    };\r\n };\r\n\r\nexport const filterCards = (gender) => {\r\n    return {type: FILTER, payload: gender}\r\n}\r\nexport const orderCards = (order) => {\r\n    return {type:ORDER, payload: order}\r\n}"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAQ,gBAAgB;AACnE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,MAAM,GAAIC,SAAS,IAAK;EACjC,MAAMC,QAAQ,GAAG,wCAAwC,CAAC,CAAC;EAC3D,OAAO,MAAOC,QAAQ,IAAK;IAAE;IAC3B,IAAI;MACD,MAAM;QAACC;MAAI,CAAC,GAAG,MAAML,KAAK,CAACM,IAAI,CAACH,QAAQ,EAAED,SAAS,CAAC,EAAC;;MAErD,IAAG,CAACG,IAAI,CAACE,MAAM,EAAE,MAAMC,KAAK,CAAC,gCAAgC,CAAC,EAAC;;MAE/D,OAAOJ,QAAQ,CAAC;QACbK,IAAI,EAAEb,OAAO;QACbc,OAAO,EAAEL;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;MACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC7B;EAEF,CAAC;AACJ,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAIC,EAAE,IAAK;EAC7B,MAAMb,QAAQ,GAAI,0CAAyCa,EAAG,EAAC;EAC/D,OAAO,MAAOZ,QAAQ,IAAK;IACzB,IAAI;MACD,MAAM;QAACC;MAAI,CAAC,GAAG,MAAML,KAAK,CAACiB,MAAM,CAACd,QAAQ,CAAC;;MAE3C;;MAEA,OAAOC,QAAQ,CAAC;QACbK,IAAI,EAAEZ,UAAU;QAChBa,OAAO,EAAEL;MACZ,CAAC,CAAC;IACL,CAAC,CAAC,OAAOM,KAAK,EAAE;MACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC7B;EAEF,CAAC;AACJ,CAAC;AAEF,OAAO,MAAMI,WAAW,GAAIC,MAAM,IAAK;EACnC,OAAO;IAACV,IAAI,EAAEX,MAAM;IAAEY,OAAO,EAAES;EAAM,CAAC;AAC1C,CAAC;AACD,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACjC,OAAO;IAACZ,IAAI,EAACV,KAAK;IAAEW,OAAO,EAAEW;EAAK,CAAC;AACvC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}