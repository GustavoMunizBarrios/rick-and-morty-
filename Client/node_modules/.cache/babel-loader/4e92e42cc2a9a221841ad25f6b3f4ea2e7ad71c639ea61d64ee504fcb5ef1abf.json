{"ast":null,"code":"var _jsxFileName = \"/home/gustavo_muniz/Henry/rick_and_morty/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Cards from './components/Cards.jsx';\nimport Nav from './components/Nav';\nimport About from './components/About';\nimport Detail from './components/Detail';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL_BASE = 'https://be-a-rym.up.railway.app/api/character';\nconst API_KEY = 'f99ef8399d40.cea0bfba7c15f21eb580';\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]); //characters es un estado del tipo array de objetos\n\n  const onSearch = id => {\n    //Con axios le hago peticiones a una api al servidor, el id lo estamos obteniendo del input, \n    //es decir de lo que escribe el usuario. Una vez que tiene una respuesta en el .then \n\n    //Axios retorna un objeto con una propiedad llamada data y ahi dentro es donde tengo la información de la api\n    axios(`${URL_BASE}/${id}?key=${API_KEY}`).then(response => response.data).then(data => {\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert('¡No hay personajes con este ID!');\n      }\n    });\n  };\n  const onClose = id => {\n    const charactersFiltered = characters.filter(character => character.id !== id); // si da true se queda si da false se va el character\n    setCharacters(charactersFiltered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"XYOUpNAi+Jhs2dnEwppRANg7X2I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cards","Nav","About","Detail","useState","axios","Routes","Route","jsxDEV","_jsxDEV","URL_BASE","API_KEY","App","_s","characters","setCharacters","onSearch","id","then","response","data","name","oldChars","window","alert","onClose","charactersFiltered","filter","character","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/gustavo_muniz/Henry/rick_and_morty/src/App.js"],"sourcesContent":["import './App.css';\nimport Cards from './components/Cards.jsx';\nimport Nav from './components/Nav';\nimport About from './components/About';\nimport Detail from './components/Detail';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Routes, Route } from 'react-router-dom';\n\nconst URL_BASE = 'https://be-a-rym.up.railway.app/api/character';\nconst API_KEY = 'f99ef8399d40.cea0bfba7c15f21eb580';\n\nfunction App() {\n   const [characters, setCharacters] = useState([]); //characters es un estado del tipo array de objetos\n\n   const onSearch = (id) => {\n      //Con axios le hago peticiones a una api al servidor, el id lo estamos obteniendo del input, \n      //es decir de lo que escribe el usuario. Una vez que tiene una respuesta en el .then \n\n      //Axios retorna un objeto con una propiedad llamada data y ahi dentro es donde tengo la información de la api\n      axios(`${URL_BASE}/${id}?key=${API_KEY}`)\n      .then(response => response.data)\n      .then((data) => {\n         if (data.name) {\n            setCharacters((oldChars) => [...oldChars, data]);\n         } else {\n            window.alert('¡No hay personajes con este ID!');\n         }\n      });\n   }\n\n   const onClose = (id) => {\n      const charactersFiltered = characters.filter(character => character.id !== id)// si da true se queda si da false se va el character\n      setCharacters(charactersFiltered)\n   }\n\n   return (\n      <div className='App'>\n         <Nav onSearch={onSearch} />\n\n         <Routes>\n            <Route path='/home' element={ <Cards characters={characters} onClose={onClose}/> }/>\n            <Route path='/about' element={<About/>} />\n            <Route path='/detail/:id' element={<Detail/>} />\n         </Routes>\n        \n      </div>\n   );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAG,+CAA+C;AAChE,MAAMC,OAAO,GAAG,mCAAmC;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElD,MAAMY,QAAQ,GAAIC,EAAE,IAAK;IACtB;IACA;;IAEA;IACAZ,KAAK,CAAE,GAAEK,QAAS,IAAGO,EAAG,QAAON,OAAQ,EAAC,CAAC,CACxCO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BF,IAAI,CAAEE,IAAI,IAAK;MACb,IAAIA,IAAI,CAACC,IAAI,EAAE;QACZN,aAAa,CAAEO,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEF,IAAI,CAAC,CAAC;MACnD,CAAC,MAAM;QACJG,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC;MAClD;IACH,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,OAAO,GAAIR,EAAE,IAAK;IACrB,MAAMS,kBAAkB,GAAGZ,UAAU,CAACa,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACX,EAAE,KAAKA,EAAE,CAAC;IAC9EF,aAAa,CAACW,kBAAkB,CAAC;EACpC,CAAC;EAED,oBACGjB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACjBrB,OAAA,CAACR,GAAG;MAACe,QAAQ,EAAEA;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAE3BzB,OAAA,CAACH,MAAM;MAAAwB,QAAA,gBACJrB,OAAA,CAACF,KAAK;QAAC4B,IAAI,EAAC,OAAO;QAACC,OAAO,eAAG3B,OAAA,CAACT,KAAK;UAACc,UAAU,EAAEA,UAAW;UAACW,OAAO,EAAEA;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACpFzB,OAAA,CAACF,KAAK;QAAC4B,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAE3B,OAAA,CAACP,KAAK;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1CzB,OAAA,CAACF,KAAK;QAAC4B,IAAI,EAAC,aAAa;QAACC,OAAO,eAAE3B,OAAA,CAACN,MAAM;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEN;AAEZ;AAACrB,EAAA,CApCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}