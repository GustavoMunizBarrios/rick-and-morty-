{"ast":null,"code":"var _jsxFileName = \"/home/gustavo_muniz/Henry/rick_and_morty/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Cards from './components/Cards';\nimport Nav from \"./components/Nav\";\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]); //characters es un estado del tipo array de objetos\n\n  const onSearch = id => {\n    //Con axios le hago peticiones a una api al servidor, el id lo estamos obteniendo del input, \n    //es decir de lo que escribe el usuario. Una vez que tiene una respuesta en el .then \n\n    //Axios retorna un objeto con una propiedad llamada data y ahi dentro es donde tengo la información de la api\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      if (data.name) {\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        alert('¡No hay personajes con este ID!');\n      }\n    });\n  };\n  const onClose = id => {\n    const charactersFiltered = characters.filter(character => character.id !== Number(id));\n    setCharacters(charactersFiltered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      characters: characters,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"XYOUpNAi+Jhs2dnEwppRANg7X2I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cards","Nav","useState","axios","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","onSearch","id","then","_ref","data","name","oldChars","alert","onClose","charactersFiltered","filter","character","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gustavo_muniz/Henry/rick_and_morty/src/App.js"],"sourcesContent":["import './App.css'\nimport Cards from './components/Cards';\nimport Nav from \"./components/Nav\";\nimport { useState } from 'react';\nimport axios from 'axios';\n\n\nfunction App() {\n    const [characters, setCharacters] = useState([]); //characters es un estado del tipo array de objetos\n\n\n   const onSearch = (id) => {\n      //Con axios le hago peticiones a una api al servidor, el id lo estamos obteniendo del input, \n      //es decir de lo que escribe el usuario. Una vez que tiene una respuesta en el .then \n\n      //Axios retorna un objeto con una propiedad llamada data y ahi dentro es donde tengo la información de la api\n      axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\n         if (data.name) {\n            setCharacters((oldChars) => [...oldChars, data]);\n         } else {\n            alert('¡No hay personajes con este ID!');\n         }\n      });\n   }\n\n   const onClose = (id) => {\n      const charactersFiltered = characters.filter(character => \n         character.id !== Number(id))\n      setCharacters(charactersFiltered)\n   }\n\n    return(\n        <div className='App'>\n            <Nav onSearch={onSearch}/>\n            <Cards characters={characters} onClose={onClose}/>\n                \n        </div>\n    )\n}\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAGnD,MAAMQ,QAAQ,GAAIC,EAAE,IAAK;IACtB;IACA;;IAEA;IACAR,KAAK,CAAE,6CAA4CQ,EAAG,EAAC,CAAC,CAACC,IAAI,CAACC,IAAA,IAAc;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MACpE,IAAIC,IAAI,CAACC,IAAI,EAAE;QACZN,aAAa,CAAEO,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEF,IAAI,CAAC,CAAC;MACnD,CAAC,MAAM;QACJG,KAAK,CAAC,iCAAiC,CAAC;MAC3C;IACH,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,OAAO,GAAIP,EAAE,IAAK;IACrB,MAAMQ,kBAAkB,GAAGX,UAAU,CAACY,MAAM,CAACC,SAAS,IACnDA,SAAS,CAACV,EAAE,KAAKW,MAAM,CAACX,EAAE,CAAC,CAAC;IAC/BF,aAAa,CAACU,kBAAkB,CAAC;EACpC,CAAC;EAEA,oBACId,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBnB,OAAA,CAACJ,GAAG;MAACS,QAAQ,EAAEA;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC1BvB,OAAA,CAACL,KAAK;MAACQ,UAAU,EAAEA,UAAW;MAACU,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEhD;AAEd;AAACrB,EAAA,CA/BQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}