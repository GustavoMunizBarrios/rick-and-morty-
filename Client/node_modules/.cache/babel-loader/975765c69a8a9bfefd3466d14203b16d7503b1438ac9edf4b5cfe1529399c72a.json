{"ast":null,"code":"var _jsxFileName = \"/home/gustavo_muniz/Henry/rick_and_morty/src/components/Favorites.jsx\";\nimport Card from './Card';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Favorites = _ref => {\n  let {\n    myFavorites\n  } = _ref;\n  //estado global myFavorites por props\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: // mapeamos el estado myfavorites (que es un array) y lo randerizamos utilizando el componente Card\n    myFavorites === null || myFavorites === void 0 ? void 0 : myFavorites.map(fav => {\n      // agregamos el condicional ? changing para evitar que se rompa \n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: fav.id,\n        name: fav.name,\n        species: fav.species,\n        gender: fav.gender,\n        image: fav.image,\n        onClose: fav.onClose\n      }, fav.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n//mapStateToProps trae el estado global myFavorite\n_c = Favorites;\nconst mapStateToProps = state => {\n  //recibe el estado global completo \n  return {\n    myFavorites: state.myFavorites\n  };\n};\nexport default connect(\n//conecta el componente Favorites con la funcion mapStateToProps\nmapStateToProps, null)(Favorites);\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["Card","connect","jsxDEV","_jsxDEV","Favorites","_ref","myFavorites","children","map","fav","id","name","species","gender","image","onClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","$RefreshReg$"],"sources":["/home/gustavo_muniz/Henry/rick_and_morty/src/components/Favorites.jsx"],"sourcesContent":["import Card from './Card';\nimport { connect } from 'react-redux';\n\n\nconst Favorites = ({myFavorites}) => { //estado global myFavorites por props\n\n    return (\n        <div>\n            {// mapeamos el estado myfavorites (que es un array) y lo randerizamos utilizando el componente Card\n                myFavorites?.map(fav => { // agregamos el condicional ? changing para evitar que se rompa \n                    return(\n                        <Card\n                            key={fav.id}\n                            id={fav.id}\n                            name={fav.name}\n                            species={fav.species}\n                            gender={fav.gender}\n                            image={fav.image}\n                            onClose={fav.onClose}\n                        />\n                    )\n                })\n            }\n        </div>\n    )\n}\n\n//mapStateToProps trae el estado global myFavorite\nconst mapStateToProps = (state) => { //recibe el estado global completo \n    return {\n       myFavorites: state.myFavorites \n    }\n }\n\n\nexport default connect( //conecta el componente Favorites con la funcion mapStateToProps\n    mapStateToProps,\n    null\n )(Favorites);"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,SAAS,GAAGC,IAAA,IAAmB;EAAA,IAAlB;IAACC;EAAW,CAAC,GAAAD,IAAA;EAAO;;EAEnC,oBACIF,OAAA;IAAAI,QAAA,EACK;IACGD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,GAAG,CAACC,GAAG,IAAI;MAAE;MACtB,oBACIN,OAAA,CAACH,IAAI;QAEDU,EAAE,EAAED,GAAG,CAACC,EAAG;QACXC,IAAI,EAAEF,GAAG,CAACE,IAAK;QACfC,OAAO,EAAEH,GAAG,CAACG,OAAQ;QACrBC,MAAM,EAAEJ,GAAG,CAACI,MAAO;QACnBC,KAAK,EAAEL,GAAG,CAACK,KAAM;QACjBC,OAAO,EAAEN,GAAG,CAACM;MAAQ,GANhBN,GAAG,CAACC,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAOb;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAEd,CAAC;;AAED;AAAAC,EAAA,GAvBMhB,SAAS;AAwBf,MAAMiB,eAAe,GAAIC,KAAK,IAAK;EAAE;EACjC,OAAO;IACJhB,WAAW,EAAEgB,KAAK,CAAChB;EACtB,CAAC;AACJ,CAAC;AAGF,eAAeL,OAAO;AAAE;AACpBoB,eAAe,EACf,IAAI,CACN,CAACjB,SAAS,CAAC;AAAC,IAAAgB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}