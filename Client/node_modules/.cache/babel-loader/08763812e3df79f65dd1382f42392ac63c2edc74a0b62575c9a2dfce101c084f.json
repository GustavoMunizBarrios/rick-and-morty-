{"ast":null,"code":"var _jsxFileName = \"/home/gustavo_muniz/Henry/rick_and_morty/Client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Cards from './components/Cards/Cards.jsx';\nimport Nav from './components/Nav/Nav.jsx';\nimport About from './components/About/About.jsx';\nimport Detail from './components/Detail/Detail.jsx';\nimport Form from './components/Form/Form.jsx';\nimport Favorites from './components/Favorites/Favorites.jsx';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\n\n/* const URL_BASE = 'https://be-a-rym.up.railway.app/api/character';\nconst API_KEY = 'f99ef8399d40.cea0bfba7c15f21eb580'; */\n\n/* const email = 'Gustavo@gmail.com'\nconst password = '123456' */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'http://localhost:3001/rickandmorty/';\nfunction App() {\n  _s();\n  const location = useLocation(); //Retorna la locación del objeto. la cual representa la url\n  const navigate = useNavigate(); // Cambia la locación de la url \n  const [characters, setCharacters] = useState([]); //characters es un estado del tipo array de objetos\n  const [access, setAccess] = useState(false); //access es un estado inicializado en false\n\n  const login = async userData => {\n    try {\n      const {\n        email,\n        password\n      } = userData; // Hace destructuring del objeto userData, extayendo las propiedades email y password\n      const {\n        data\n      } = await axios(URL + `login/?email=${email}&password=${password}`); //realiza una petición GET a la URL pasando como parametros email y password\n      //Si la solicitud es exitosa regresa el objeto data que es: {access:true} con un valor booleano true o false.\n      const {\n        access\n      } = data; //Hace destructuring de data, extrayendo el valor booleano (true o false)\n      setAccess(access); // Configura el estado access con el valor booleano (true o false)\n      access && navigate('/home'); //Si access es true, entonces ingreso al home\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    // cada vez que cambie access se ejecuta lo que este en useEffect\n    !access && navigate('/'); // si access esta en false entonces no va a llevar a otra ruta que no sea /\n  }, [access]); // El array de dependencias se queda \"escuchando\" a access\n\n  // La función onSearch agrega un nuevo personaje al estado local characters. Hace una petición sync-awit con axios\n  const onSearch = async id => {\n    try {\n      //Con axios le hago peticiones a una api al servidor, el id lo estamos obteniendo del input, es decir de lo que escribe el usuario. \n      const {\n        data\n      } = await axios(URL + `character/${id}`);\n\n      //Axios retorna el objeto data y ahi dentro es donde tengo todas las propiedades del character\n\n      if (data.name) {\n        // si hay un data.name entonces \n        //setea characters [Crea una copia de todo lo que tenia characters(...oldChars), concatena la nueva respuesta (data)]\n        setCharacters(oldChars => [...oldChars, data]);\n      }\n    } catch (error) {\n      alert('¡No hay personajes con este ID!');\n    }\n  };\n  const onClose = id => {\n    //El método filter retornará los elementos del array que cumplan la condición especificada en la función callback\n    // Es decir me retornará un array con los characters que no contangan el id que le pase por parámetro.\n    const charactersFiltered = characters.filter(character => character.id !== id); // si da true se queda si da false se va el character\n    setCharacters(charactersFiltered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\n    //pathname me dice la url del usuario, si esta es diferente de '/' entonces randeriza a Nav\n    location.pathname !== '/' && /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login,\n          setAcces: setAccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"UiBENoXooq4swAu0FzywR/qxxVw=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cards","Nav","About","Detail","Form","Favorites","useState","useEffect","axios","Routes","Route","useLocation","useNavigate","jsxDEV","_jsxDEV","URL","App","_s","location","navigate","characters","setCharacters","access","setAccess","login","userData","email","password","data","error","console","log","message","onSearch","id","name","oldChars","alert","onClose","charactersFiltered","filter","character","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","element","setAcces","_c","$RefreshReg$"],"sources":["/home/gustavo_muniz/Henry/rick_and_morty/Client/src/App.js"],"sourcesContent":["import './App.css';\nimport Cards from './components/Cards/Cards.jsx';\nimport Nav from './components/Nav/Nav.jsx';\nimport About from './components/About/About.jsx';\nimport Detail from './components/Detail/Detail.jsx';\nimport Form from './components/Form/Form.jsx';\nimport Favorites from './components/Favorites/Favorites.jsx';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\n\n/* const URL_BASE = 'https://be-a-rym.up.railway.app/api/character';\nconst API_KEY = 'f99ef8399d40.cea0bfba7c15f21eb580'; */\n\n/* const email = 'Gustavo@gmail.com'\nconst password = '123456' */\nconst URL = 'http://localhost:3001/rickandmorty/';\n\nfunction App() {\n   const location = useLocation(); //Retorna la locación del objeto. la cual representa la url\n   const navigate = useNavigate() // Cambia la locación de la url \n   const [characters, setCharacters] = useState([]); //characters es un estado del tipo array de objetos\n   const [access, setAccess] = useState(false); //access es un estado inicializado en false\n\n   const login = async (userData) => {\n      try {\n         const { email, password } = userData; // Hace destructuring del objeto userData, extayendo las propiedades email y password\n         const {data} = await axios(URL + `login/?email=${email}&password=${password}`) //realiza una petición GET a la URL pasando como parametros email y password\n         //Si la solicitud es exitosa regresa el objeto data que es: {access:true} con un valor booleano true o false.\n         const { access } = data; //Hace destructuring de data, extrayendo el valor booleano (true o false)\n         setAccess(access); // Configura el estado access con el valor booleano (true o false)\n         access && navigate('/home'); //Si access es true, entonces ingreso al home\n\n      } catch (error) {\n         console.log(error.message);\n      }\n   }\n\n   useEffect(() => { // cada vez que cambie access se ejecuta lo que este en useEffect\n      !access && navigate('/') // si access esta en false entonces no va a llevar a otra ruta que no sea /\n   }, [access]) // El array de dependencias se queda \"escuchando\" a access\n\n   // La función onSearch agrega un nuevo personaje al estado local characters. Hace una petición sync-awit con axios\n   const onSearch = async (id) => {\n      try {\n         //Con axios le hago peticiones a una api al servidor, el id lo estamos obteniendo del input, es decir de lo que escribe el usuario. \n         const {data} = await axios(URL + `character/${id}`); \n         \n         //Axios retorna el objeto data y ahi dentro es donde tengo todas las propiedades del character\n\n         if (data.name) { // si hay un data.name entonces \n            //setea characters [Crea una copia de todo lo que tenia characters(...oldChars), concatena la nueva respuesta (data)]\n            setCharacters((oldChars) => [...oldChars, data]); \n         } \n         \n      } catch (error) {\n         alert('¡No hay personajes con este ID!');\n      }\n\n   }\n\n   const onClose = (id) => {\n      //El método filter retornará los elementos del array que cumplan la condición especificada en la función callback\n      // Es decir me retornará un array con los characters que no contangan el id que le pase por parámetro.\n      const charactersFiltered = characters.filter(character => character.id !== id)// si da true se queda si da false se va el character\n      setCharacters(charactersFiltered)\n   }\n\n   return (\n      <div className='App'>\n         {\n            //pathname me dice la url del usuario, si esta es diferente de '/' entonces randeriza a Nav\n            location.pathname !== '/' && <Nav onSearch={onSearch} />   \n         }\n          {/* le pasamos por propiedad a Nav la función onSearch */}\n\n         {/* Con Route definimos las rutas y que se ve a mostrar en cada una de ellas, después con Link le mostramos a que path se va a dirigir */}\n         <Routes>\n            <Route path='/' element={<Form login={login}  setAcces={setAccess}/>}/>\n            <Route path='/home' element={ <Cards characters={characters} onClose={onClose}/> }/>\n            <Route path='/about' element={<About/>} />\n            <Route path='/detail/:id' element={<Detail/>} />\n            <Route path='/favorites' element={<Favorites/>} />\n         </Routes>\n        \n      </div>\n   );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,8BAA8B;AAChD,OAAOC,GAAG,MAAM,0BAA0B;AAC1C,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;;AAE1E;AACA;;AAEA;AACA;AADA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,GAAG,qCAAqC;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAMC,QAAQ,GAAGP,WAAW,EAAE,CAAC,CAAC;EAChC,MAAMQ,QAAQ,GAAGP,WAAW,EAAE,EAAC;EAC/B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7C,MAAMkB,KAAK,GAAG,MAAOC,QAAQ,IAAK;IAC/B,IAAI;MACD,MAAM;QAAEC,KAAK;QAAEC;MAAS,CAAC,GAAGF,QAAQ,CAAC,CAAC;MACtC,MAAM;QAACG;MAAI,CAAC,GAAG,MAAMpB,KAAK,CAACO,GAAG,GAAI,gBAAeW,KAAM,aAAYC,QAAS,EAAC,CAAC,EAAC;MAC/E;MACA,MAAM;QAAEL;MAAO,CAAC,GAAGM,IAAI,CAAC,CAAC;MACzBL,SAAS,CAACD,MAAM,CAAC,CAAC,CAAC;MACnBA,MAAM,IAAIH,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IAEhC,CAAC,CAAC,OAAOU,KAAK,EAAE;MACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC7B;EACH,CAAC;EAEDzB,SAAS,CAAC,MAAM;IAAE;IACf,CAACe,MAAM,IAAIH,QAAQ,CAAC,GAAG,CAAC,EAAC;EAC5B,CAAC,EAAE,CAACG,MAAM,CAAC,CAAC,EAAC;;EAEb;EACA,MAAMW,QAAQ,GAAG,MAAOC,EAAE,IAAK;IAC5B,IAAI;MACD;MACA,MAAM;QAACN;MAAI,CAAC,GAAG,MAAMpB,KAAK,CAACO,GAAG,GAAI,aAAYmB,EAAG,EAAC,CAAC;;MAEnD;;MAEA,IAAIN,IAAI,CAACO,IAAI,EAAE;QAAE;QACd;QACAd,aAAa,CAAEe,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAER,IAAI,CAAC,CAAC;MACnD;IAEH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACbQ,KAAK,CAAC,iCAAiC,CAAC;IAC3C;EAEH,CAAC;EAED,MAAMC,OAAO,GAAIJ,EAAE,IAAK;IACrB;IACA;IACA,MAAMK,kBAAkB,GAAGnB,UAAU,CAACoB,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACP,EAAE,KAAKA,EAAE,CAAC;IAC9Eb,aAAa,CAACkB,kBAAkB,CAAC;EACpC,CAAC;EAED,oBACGzB,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA;IAEd;IACAzB,QAAQ,CAAC0B,QAAQ,KAAK,GAAG,iBAAI9B,OAAA,CAACb,GAAG;MAACgC,QAAQ,EAAEA;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAK3DlC,OAAA,CAACL,MAAM;MAAAkC,QAAA,gBACJ7B,OAAA,CAACJ,KAAK;QAACuC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEpC,OAAA,CAACV,IAAI;UAACoB,KAAK,EAAEA,KAAM;UAAE2B,QAAQ,EAAE5B;QAAU;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACvElC,OAAA,CAACJ,KAAK;QAACuC,IAAI,EAAC,OAAO;QAACC,OAAO,eAAGpC,OAAA,CAACd,KAAK;UAACoB,UAAU,EAAEA,UAAW;UAACkB,OAAO,EAAEA;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACpFlC,OAAA,CAACJ,KAAK;QAACuC,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEpC,OAAA,CAACZ,KAAK;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1ClC,OAAA,CAACJ,KAAK;QAACuC,IAAI,EAAC,aAAa;QAACC,OAAO,eAAEpC,OAAA,CAACX,MAAM;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAChDlC,OAAA,CAACJ,KAAK;QAACuC,IAAI,EAAC,YAAY;QAACC,OAAO,eAAEpC,OAAA,CAACT,SAAS;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEN;AAEZ;AAAC/B,EAAA,CArEQD,GAAG;EAAA,QACQL,WAAW,EACXC,WAAW;AAAA;AAAAwC,EAAA,GAFtBpC,GAAG;AAuEZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}